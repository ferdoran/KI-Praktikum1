/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.Point;
import java.awt.Color;

import java.awt.Graphics2D;
import java.util.HashSet;

/**
 *
 * @author Roland
 */
public class DrawingPanel extends javax.swing.JPanel {
    
    HashSet<Point> points;
    HashSet<Point> drawnPoints;
    Point selected;

    /**
     * Creates new form DrawingPanel
     */
    public DrawingPanel() {
        initComponents();
        drawnPoints = new HashSet<>();
    }
    
    public boolean setPoints(HashSet<Point> p) {
        if(p == null) {
            return false;
        }
        points = p;
        return true;
    }
    
    
    public void drawAllPoints() {
        Graphics2D g = (Graphics2D) this.getGraphics();
        super.paintComponent(g);
        for(Point p: points) {
                int x = (int) p.getX();
                int y = (int) p.getY();
                
                g.drawOval(x, y, 5, 5);
                g.fillOval(x, y, 5, 5);
                g.drawString(p.getName() + "("+(x)+","+ y + ")", x, 15+y);
        }
        if(selected != null) {
            int x = (int) selected.getX();
            int y = (int) selected.getY();
            String name = selected.getName();
            g.setColor(Color.RED);
            g.drawOval(x, y, 5, 5);
            g.fillOval(x, y, 5, 5);
            g.drawString(name + "("+(x)+","+ y + ")", x, 15+y);
            
        }
    }
    
    public void selectPoint(Point p) {
        selected = p;
        Graphics2D g = (Graphics2D) this.getGraphics();
        super.paintComponent(g);
        int x = (int) p.getX();
        int y = (int) p.getY();
        
        
        drawAllPoints();
        g.setColor(Color.RED);
        g.drawOval(x, y, 5, 5);
        g.fillOval(x, y, 5, 5);
        g.drawString(p.getName() + "("+(x)+","+ y + ")", x, 15+y);
    }
    
    public void drawPoint(Point p) {
        Graphics2D g = (Graphics2D) this.getGraphics();
        super.paintComponent(g);
        int x = (int) p.getX();
        int y = (int) p.getY();
        g.drawOval(x, y, 5, 5);
        g.fillOval(x, y, 5, 5);
        g.drawString(p.getName() + "("+(x)+","+ y + ")", x, 15+y);
    }
    
    public void unselectPoints() {
        if(selected != null) {
            selected=null;
            Graphics2D g = (Graphics2D) this.getGraphics();
            super.paintComponent(g);
            undrawAllPoints();
            drawAllPoints();
            
        }
        else {
            
        }
    }
    
    
    public void undrawPoint(Point p) {
        Graphics2D g = (Graphics2D) this.getGraphics();
        super.paintComponent(g);
        if(drawnPoints.contains(p)) {
            int x = (int) p.getX();
            int y = (int) p.getY();
            g.setColor(getBackground());
            g.drawOval(x, y, 5, 5);
            g.fillOval(x, y, 5, 5);
            g.drawString(p.getName() + "("+(x)+","+ y + ")", x, 15+y);
        }
    }
    public void undrawAllPoints() {
        Graphics2D g = (Graphics2D) this.getGraphics();
        super.paintComponent(g);
        drawnPoints.clear();
        g.clearRect(0, 0, WIDTH, HEIGHT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
